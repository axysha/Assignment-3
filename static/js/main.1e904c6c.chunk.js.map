{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","console","log","credits","map","credit","date","slice","Number","amount","toFixed","description","id","event","newCredit","Math","random","toString","Date","toISOString","addCredit","reset","placeholder","required","Debits","debits","debit","newDebit","addDebit","App","calculateBalance","totalCredits","reduce","sum","c","totalDebits","d","parseFloat","newCreditList","creditList","newBalance","debitList","newDebitList","logInInfo","newUser","currentUser","Promise","all","fetch","then","res","json","catch","error","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e904c6c.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n\n  console.log(\"Credits passed to component:\", props.credits);\n\n  //Create list of credit items\n  let creditsView =() =>{\n    const {credits} = props;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{Number(credit.amount).toFixed(2)} {credit.description} {date}</li>\n    });\n  }\n\n  //Handling form submissions \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newCredit = {\n      id:Math.random().toString(), //temp unique id\n      description: event.target.description.value,\n      amount: Number(event.target.amount.value).toFixed(2),\n      date: new Date().toISOString(),\n    };\n    props.addCredit(newCredit);\n    event.target.reset();\n  }\n\n\n  //Render the lise of Credit items and a form to input a new Credit item\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"description\" placeholder='Description' required />\n        <input type=\"number\" name=\"amount\" placeholder='Amount' required />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n\n      <h3>Account Balance: ${props.accountBalance.toFixed(2)}</h3>\n\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n\n  //Handle Form Submissions\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newDebit = {\n      id:Math.random().toString(),\n      description: event.target.description.value,\n      amount: Number(event.target.amount.value),\n      date: new Date().toISOString(),\n    };\n    props.addDebit(newDebit);\n    event.target.reset();\n  };\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"description\" placeholder='Description' required />\n        <input type=\"number\" name=\"amount\" placeholder='Amount' required/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n\n      <h3> Account Balance: ${props.accountBalance.toFixed(2)}</h3>\n\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Lifecycle method componentDidMount\n  // componentDidMount(){\n  //   //API call to fetch credits data\n  //   fetch('https://johnnylaicode.github.io/api/credits.json')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       const credits = data.credits || [];\n  //       this.setState(prevState => ({\n  //         creditList:credits,\n  //         accountBalance: this.calculateBalance(credits,prevState.debitList || []),\n  //       }));\n  //     })\n  //     .catch(error => console.error(\"Error fetching credits: \",error));\n    \n  //   //API call to fetch debits data\n  //   fetch('https://johnnylaicode.github.io/api/debits.json')\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       const debits = data.debits || [];\n  //       this.setState(prevState => ({\n  //         debitList:debits,\n  //         accountBalance: this.calculateBalance(prevState.creditList || [],debits),\n  //       }));\n  //     })\n  //   .catch(error => console.error(\"Error fetching debits: \",error));\n  // }\n\n  componentDidMount() {\n    const creditsURL = \"https://johnnylaicode.github.io/api/credits.json\";\n    const debitsURL = \"https://johnnylaicode.github.io/api/debits.json\";\n  \n    Promise.all([\n      fetch(creditsURL).then(res => res.json()),\n      fetch(debitsURL).then(res => res.json())\n    ])\n    .then(([credits, debits]) => {\n      this.setState({\n        creditList: credits,\n        debitList: debits,\n        accountBalance: this.calculateBalance(credits, debits)\n      });\n    })\n    .catch(error => console.error(\"Error fetching data:\", error));\n  }\n  \n  //add debit and credit functions here \n  //helper to calculate account balance\n  calculateBalance = (credits = [],debits = []) => {\n    const totalCredits = credits.reduce((sum,c) => sum + Number(c.amount),0);\n    const totalDebits = debits.reduce((sum,d)=>sum+Number(d.amount),0);\n    return parseFloat((totalCredits-totalDebits).toFixed(2));\n  };\n\n  //add credit\n  addCredit = (credit) => {\n    const newCreditList = [...this.state.creditList,credit];\n    const newBalance = this.calculateBalance(newCreditList,this.state.debitList);\n    this.setState({\n      creditList:newCreditList,\n      accountBalance:newBalance,\n    });\n  };\n\n\n  //add debit\n  addDebit = (debit) => {\n    const newDebitList = [...this.state.debitList,debit];\n    const newBalance = this.calculateBalance(this.state.creditList,newDebitList);\n    this.setState({\n      debitList:newDebitList,\n      accountBalance:newBalance,\n    });\n  };\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/Assignment-3\"> \n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}